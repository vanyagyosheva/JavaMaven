/**
 * dependent libraries:
 * 
 * poi-3.14-20160307.jar
 * poi-ooxml-3.14-20160307.jar
 * poi-ooxml-schemas-3.14-20160307.jar
 */
package com.test.excel;
import java.io.File;
import java.io.IOException;
import java.util.Locale;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Vector;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellReference;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class ReadCellData {

	String excelFilepath = "C://temp/Employee.xlsx";
	String sheetName = "excelfile";
	File myFile = new File(excelFilepath);
    FileInputStream fileInStrm= new FileInputStream(myFile);

    // Finds the workbook instance for XLSX file
    Workbook myWorkBook = new XSSFWorkbook (fileInStrm);
   
    Sheet theSheet = myWorkBook.getSheet(sheetName);
	if (theSheet == null) {
		myWorkBook.close();
		throw new IllegalArgumentException("Sheet name was not found in excel! - " + sheetName);
	}
    // Return first sheet from the XLSX workbook
    Sheet mySheet = myWorkBook.getSheetAt(0);
   
    // Get iterator to all the rows in current sheet
    Iterator<Row> rowIterator = mySheet.iterator();
   
    // Traversing over each row of XLSX file
    while (rowIterator.hasNext()) {
        Row row = rowIterator.next();

        // For each row, iterate through each columns
        Iterator<Cell> cellIterator = row.cellIterator();
        while (cellIterator.hasNext()) {

            Cell cell = cellIterator.next();

            switch (cell.getCellType()) {
            case Cell.CELL_TYPE_STRING:
                System.out.print(cell.getStringCellValue() + "\t");
                break;
            case Cell.CELL_TYPE_NUMERIC:
                System.out.print(cell.getNumericCellValue() + "\t");
                break;
            case Cell.CELL_TYPE_BOOLEAN:
                System.out.print(cell.getBooleanCellValue() + "\t");
                break;
            default :
         
            }
        }
        System.out.println("");
    	}
	}
}