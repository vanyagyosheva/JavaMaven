package com.selenium.controls;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class TestContextDriver {
	
	 private static WebDriver _webDriver;

	
	/**
	 * Returns the web driver
	 * @return
	 */
	public static WebDriver GetWebDriver(){
        return _webDriver;
    }
	
    /**
     * Sets the web driver
     * @param webDriver
     */
    public static void SetWebDriver(WebDriver webDriver){
        TestContextDriver._webDriver = webDriver;
    }

    /**
     * @return
     */
    public static String GetPageTitle() { 
    	return TestContextDriver._webDriver.getTitle().trim();
    }

    /**
     * @param seconds
     */
    public static void ImplicitlyWait(int seconds){
        _webDriver.manage().timeouts().implicitlyWait(seconds, TimeUnit.SECONDS);
    }

    public static void SetPageLoadTimeout(int seconds)
    {
        _webDriver.manage().timeouts().pageLoadTimeout(seconds, TimeUnit.SECONDS);
    }

    public static void SwitchTo()
    {
        _webDriver.switchTo().window(_webDriver.getWindowHandle());
    }

    public static void WaitForElementToBeVisible(String element)
    {
    	WebElement wait = new WebDriverWait(_webDriver, 10).until(ExpectedConditions.presenceOfElementLocated(By.id(element)));
    }

    public static void WindowMaximize(){
    	
        _webDriver.manage().window().maximize();
        }

    public static void SwitchToFrame(int frame)
    {
        GetWebDriver().switchTo().frame(frame);
    }

    public static void SwitchToDefault()
    {
        GetWebDriver().switchTo().defaultContent();
    }

	}

