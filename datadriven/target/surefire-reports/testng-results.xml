<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="bg.pragmatic.datadriven.TestNGDDT" duration-ms="114" started-at="2017-01-27T15:29:18Z" finished-at="2017-01-27T15:29:18Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="114" started-at="2017-01-27T15:29:18Z" finished-at="2017-01-27T15:29:18Z">
      <class name="bg.pragmatic.datadriven.TestNGDDT">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:bg.pragmatic.datadriven.TestNGDDT@6b2fad11]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-27T17:29:18Z" finished-at="2017-01-27T17:29:18Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: D:\drivers\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\drivers\geckodriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.firefox.GeckoDriverService.access$000(GeckoDriverService.java:37)
	at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:95)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.firefox.FirefoxDriver.createCommandExecutor(FirefoxDriver.java:277)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:247)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:242)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:238)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
	at bg.pragmatic.datadriven.TestNGDDT.setUp(TestNGDDT.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="testBMICalculator(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:bg.pragmatic.datadriven.TestNGDDT@6b2fad11]" name="testBMICalculator" duration-ms="1" started-at="2017-01-27T17:29:18Z" data-provider="testData" finished-at="2017-01-27T17:29:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[160]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[17.6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Underweight]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBMICalculator -->
        <test-method status="SKIP" signature="testBMICalculator(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:bg.pragmatic.datadriven.TestNGDDT@6b2fad11]" name="testBMICalculator" duration-ms="1" started-at="2017-01-27T17:29:18Z" data-provider="testData" finished-at="2017-01-27T17:29:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[181]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[89]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[27.2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Overweight]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBMICalculator -->
        <test-method status="SKIP" signature="testBMICalculator(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:bg.pragmatic.datadriven.TestNGDDT@6b2fad11]" name="testBMICalculator" duration-ms="0" started-at="2017-01-27T17:29:18Z" data-provider="testData" finished-at="2017-01-27T17:29:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[168]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[24.8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Normal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBMICalculator -->
        <test-method status="SKIP" signature="testBMICalculator(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:bg.pragmatic.datadriven.TestNGDDT@6b2fad11]" name="testBMICalculator" duration-ms="0" started-at="2017-01-27T17:29:18Z" data-provider="testData" finished-at="2017-01-27T17:29:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[178]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31.6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Obesity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBMICalculator -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:bg.pragmatic.datadriven.TestNGDDT@6b2fad11]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-01-27T17:29:18Z" finished-at="2017-01-27T17:29:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- bg.pragmatic.datadriven.TestNGDDT -->
    </test> <!-- Command line test -->
  </suite> <!-- bg.pragmatic.datadriven.TestNGDDT -->
</testng-results>
